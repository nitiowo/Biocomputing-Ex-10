#Set the working directory which contains the necessary files and download ggplot
setwd("/Users/jsobo/OneDrive/Documents/Intro to Biocomputing/Biocomputing-Ex-10/")
library("ggplot2")
#Reading the Data into R
UWvsMSU <- read.table("UWvMSU_1-22-13.txt", header = TRUE)
#Creating another data set with 51 rows and 3 colums
cumulative_scores <- data.frame(matrix(0,nrow=51, ncol=3))
#Adding column names to the data set
colnames(cumulative_scores) <- c("Time", "UW_Score", "MSU_Score")
#Adding the times into the cumulative scores data set with 0 to start
cumulative_scores$Time <- c(0, UWvsMSU$time)
#starting the for loop
for (i in 1:length(UWvsMSU$score)) {
#Adjusted_cumulative_index to offset so that UWvsMSU starts counting from the second row instead of the first row of cumulative_scores. The i length is 50 and the adjusted_cumlative length is 51 as I was getting an error code that the lengths were different
Adjusted_cumulative_index <- i + 1
#Updating the UW score every time they scored and staying the same when they do not score
if (UWvsMSU$team[i] == "UW") {
cumulative_scores$UW_Score[Adjusted_cumulative_index] <- cumulative_scores$UW_Score[Adjusted_cumulative_index - 1] + UWvsMSU$score[i]
} else {
cumulative_scores$UW_Score[Adjusted_cumulative_index] <- cumulative_scores$UW_Score[Adjusted_cumulative_index - 1]
}
#Updating the MSU score every time they scored and staying the same when they do not score
if (UWvsMSU$team[i] == "MSU") {
cumulative_scores$MSU_Score[Adjusted_cumulative_index] <- cumulative_scores$MSU_Score[Adjusted_cumulative_index - 1] + UWvsMSU$score[i]
} else {
cumulative_scores$MSU_Score[Adjusted_cumulative_index] <- cumulative_scores$MSU_Score[Adjusted_cumulative_index - 1]
}
}
#Creating the graph of the cumulative totals of both teams against time where the red line is UW and the green line is MSU
ggplot(cumulative_scores, aes(x = Time)) +
geom_line(aes(y = UW_Score), color = "red") +
geom_line(aes(y = MSU_Score), color = "forestgreen") +
xlab("Time") +
ylab("Score") +
theme_classic()
#Question 2 - Creating a Number guessing game
GuessMyNumber <- function(){
random_number <- sample(c(1:100),1)
print("I'm thinking of a number 1-100, can you guess it,?(You have 10 attempts)")
guess <- is.numeric(readline(prompt="Guess:"))
Total_Guesses <- 0
while (guess != random_number & Total_Guesses < 10){
if (guess<random_number){
print("Higher")
guess <- is.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} else {
print("Lower")
guess <- is.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} }
if (Total_Guesses < 10){
print("Correct!")
} else {
print("Sorry, You've ran out of guesses")
}
}
GuessMyNumber()
#Question 2 - Creating a Number guessing game
GuessMyNumber <- function(){
random_number <- sample(c(1:100),1)
print("I'm thinking of a number 1-100, can you guess it,?(You have 10 attempts)")
guess <- as.numeric(readline(prompt="Guess:"))
Total_Guesses <- 0
while (guess != random_number & Total_Guesses < 10){
if (guess<random_number){
print("Higher")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} else {
print("Lower")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} }
if (Total_Guesses < 10){
print("Correct!")
} else {
print("Sorry, You've ran out of guesses")
}
}
GuessMyNumber()
#Question 2 - Creating a Number guessing game
> GuessMyNumber <- function(){
#Question 2 - Creating a Number guessing game
> GuessMyNumber <- function(){
#Question 2 - Creating a Number guessing game
> GuessMyNumber <- function(){
#Question 2 - Creating a Number guessing game
GuessMyNumber <- function(){
random_number <- sample(c(1:100),1)
print("I'm thinking of a number 1-100, can you guess it,?(You have 10 attempts)")
guess <- as.numeric(readline(prompt="Guess:"))
Total_Guesses <- 0
while (guess != random_number & Total_Guesses < 10){
if (guess<random_number){
print("Higher")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} else {
print("Lower")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} }
if (Total_Guesses < 10){
print("Correct!")
} else {
print("Sorry, You've ran out of guesses")
}
}
Total_Guesses <- Total_Guesses + 1
#Question 2 - Creating a Number guessing game
GuessMyNumber <- function(){
random_number <- sample(c(1:100),1)
print("I'm thinking of a number 1-100, can you guess it,?(You have 10 attempts)")
guess <- as.numeric(readline(prompt="Guess:"))
Total_Guesses <- 0
while (guess != random_number & Total_Guesses < 10){
if (guess<random_number){
print("Higher")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} else {
print("Lower")
guess <- as.numeric(readline(prompt = "Guess:"))
Total_Guesses <- Total_Guesses + 1
} }
if (Total_Guesses < 10){
print("Correct!")
} else {
print("Sorry, You've ran out of guesses")
}
}
GuessMyNumber()
#Lecture 25
#Check if sum is more or less than 100
checkAssignment <- function(filename){
table <- read.csv()
#Create sum
tableSum <- sum(table)
}
guess_game<-function(){
attempts<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else if (guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
guess_game()
guess_game()
guess_game<-function(){
attempts<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
print("Correct!")
} else if (guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
guess_game()
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
print("Correct!")
} else if (guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
guess_game<-function(){
attempts<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else if (guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
guess_game<-function(){
attempts<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else (guess>random_number) {
guess_game<-function(){
attempts<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else if(guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
Guess_The_Numbergame<-function(){
guesses<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:attempts) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else if(guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
Guess_The_Numbergame()
Guess_The_Numbergame<-function(){
guesses<-10
random_number<-sample((1:100),1)
print("I'm thinking of a number 1-100...")
for (i in 1:guesses) {
guess<-readline("Guess: ")
if (guess==random_number) {
return("Correct!")
} else if(guess>random_number) {
print("Lower")
} else {
print("Higher")
}
}
print("Sorry, you tried all ten attempts. The game has ended.")
}
Guess_The_Numbergame()
Guess_The_Numbergame()
